version: '3'
services:
  proxy:
    image: traefik
    restart: unless-stopped
    command: --web --docker --docker.exposedByDefault=false --loglevel=info
    volumes:
     - /var/run/docker.sock:/var/run/docker.sock:ro
     - ./traefik/traefik.toml:/traefik.toml
    ports:
     - "80:80"
     - "443:443"
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.5.0
    restart: unless-stopped
    environment:
     - cluster.name=elasticsearch
     - xpack.security.enabled=false
     - discovery.type=single-node
     - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
  cimi:
    image: mf2c/cimi-server:latest
    expose:
     - "8201"
    restart: unless-stopped
    labels:
     - "traefik.enable=true"
     - "traefik.backend=cimi"
     - "traefik.frontend.rule=PathPrefix:/,/"
  COMPSs:
    image: mf2c/compss-mf2c:1.0
    expose: 
     - 8080
    restart: unless-stopped
  service-manager:
    image: mf2c/service-manager:latest
    restart: unless-stopped
    depends_on:
      - cimi
    expose:
      - "46200"
    ports:
      - 46200:46200
  discovery:
    image: mf2c/discovery:latest
    depends_on:
      - cimi
    expose: 
      - 46040
    cap_add:
      - NET_ADMIN
  policies:
    image: mf2c/policies:latest
    depends_on:
      - discovery
    # container_name: policies
    ports:
      - "46050"
      - "46051:46051"
      - "46052:46052"
  cau-client:
    image: mf2c/cau-client:latest
    depends_on:
#   assuming cau and leader cau are bootstrapped elsewhere
      - policies
    # container_name: cau-client
    expose:
      - 46065
#   please provide ip:port params for CAU and leader CAU
    environment:
      - CAU_URL=127.0.0.1:46400
      - LCAU_URL=127.0.0.1:46410
  identification:
    image: mf2c/identification:latest
    volumes:
      - mydata:/data
    expose:
      - 46060
  user-management:
    image: mf2c/user-management:latest
    expose:
      - "46300"
    environment:
      - CIMI_URL=
  lifecycle:
    image: mf2c/lifecycle
    expose:
      - "46000"
    ports:
      - "46000:46000"
    environment:
      - CIMI_URL=
      - STANDALONE_MODE=False
      - HOST_IP=
      - WORKING_DIR_VOLUME=/tmp/compose_files
    volumes:
      - /tmp/compose_files:/tmp/compose_files
      - /var/run/docker.sock:/var/run/docker.sock  
  resouce-categorization:
    image: mf2c/resource-categorization:latest
    depends_on:
      - cimi
    expose:
      - 46070
    privileged: true
  snaptemp:
    image: mf2c/snaptemp:latest
    command: sh /download.sh
    depends_on:
      - snap
  influxdb:
    image: influxdb
    expose:
      - "8086"
    volumes: 
      - influx:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=snap
      - INFLUXDB_USER=snap
      - INFLUXDB_USER_PASSWORD=snap
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_USER_PASSWORD=admin
  snap:
    image: intelsdi/snap:precise
    ports:
      - "8181:8181"
    volumes: ['/proc:/proc_host', '/sys/fs/cgroup:/sys/fs/cgroup', '/var/run/docker.sock:/var/run/docker.sock']
    depends_on:
      - influxdb
    environment:
      - SNAP_VERSION=2.0.0
      - SNAP_LOG_LEVEL=2
  influxdb-analytics:
    image: influxdb:latest
    environment:
      - ADMIN_USER=analytics_engine
      - INFLUX_INIT_PWD=analytics_engine
      - PRE_CREATE_DB=analytics_engine_development
    volumes:
      # Data persistency
      - influx-analytics:/var/lib/influxdb
  analytics_engine:
    image: mf2c/analytics-engine:latest
    expose:
      - "46020"
    depends_on:
      - influxdb-analytics
    volumes:
      - ./analytics_engine.conf:/analytics_engine/analytics_engine.conf
  neo4j:
    image: neo4j:2.3.12
    volumes:
    - neo4j:/data
    ports:
    - "7475:7474" # expose the port for the console ui
    environment:
    - NEO4J_AUTH=neo4j/password # neo4j requires change from default password, should reflect landscape.cfg
  landscaper:
    image: mf2c/landscaper:latest
    volumes:
    - landscaper:/landscaper/data
    - ./landscaper.cfg:/landscaper/landscaper.cfg
    depends_on:
      - "neo4j"
    environment:
      - OS_TENANT_NAME=
      - OS_PROJECT_NAME=
      - OS_TENANT_ID=
      - OS_USERNAME=
      - OS_PASSWORD=
      - OS_AUTH_URL=
    command: ["/start.sh", "http://neo4j:7474"]
  web:
    image: mf2c/landscaper-api:latest
    volumes:
      - ./landscaper.cfg:/landscaper/landscaper.cfg
    ports:
      - "9001:9001"
    depends_on:
      - neo4j
      - landscaper



volumes:
  mydata: {}
  influx: {}
  influx-analytics: {}
  neo4j: {}
  landscaper: {}

